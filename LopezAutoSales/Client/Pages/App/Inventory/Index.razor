@page "/app/inventory"
@attribute [Authorize(Roles = "Admin")]
@inject AuthHttp auth
@inject CarManager carManager

<h1 class="text-center">Inventory</h1>
<div class="row mb-2">
    <div class="col-6">
        <a class="btn btn-secondary" href="/app/inventory/sell">Sell Vehicle</a>
    </div>
    <div class="col-6 text-right">
        <a href="/app/inventory/add" class="btn btn-secondary"><i class="mdi mdi-plus"></i> Add Vehicle</a>
    </div>
</div>
@if (Inventory == null)
{
    <p class="lead">Loading...</p>
}
else if (Inventory.Cars.Count() == 0)
{
    <p class="lead">There's currently no active vehicles in inventory.</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="text-center">
                <tr>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.Year)">
                        Year
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.Make)">
                        Make
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.Model)">
                        Model
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.Mileage)">
                        Mileage
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.BoughtPrice)">
                        Bought Price
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.ListPrice)">
                        List Price
                    </th>
                    <th class="pointer" scope="col" @onclick="() => Inventory.Sort(Inventory.SortMethod.Salvage)">
                        Salvage
                    </th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody class="text-center">
                @foreach (Car car in Inventory.Cars)
                {
                    <tr>
                        <td>
                            @car.Year
                        </td>
                        <td>@car.Make</td>
                        <td>@car.Model</td>
                        <td>@car.MileageString()</td>
                        <td class=@(car.BoughtPrice.HasValue ? string.Empty : "table-danger")>
                            @car.BoughtPrice?.ToString("C")
                        </td>
                        <td>@car.ListPrice.ToString("C")</td>
                        <td>
                            <input class="form-check-input position-static" disabled type="checkbox" @bind="car.IsSalvage" />
                        </td>
                        <td>
                            <div class="btn-group" role="group">
                                <a href="/warranty/@car.Id" class="btn btn-secondary">Warranty</a>
                                <a href="/app/inventory/edit/@car.Id" class="btn btn-secondary" @onclick="() => SetData(car)">Edit</a>
                                <a href="/app/inventory/sell/@car.Id" class="btn btn-secondary">Sell</a>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    public Inventory Inventory { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Inventory = new Inventory(await auth.Client.GetFromJsonAsync<IEnumerable<Car>>("/api/inventory"));
        await base.OnInitializedAsync();
    }

    public void SetData(Car car)
    {
        carManager.SetCar(car);
    }
}
